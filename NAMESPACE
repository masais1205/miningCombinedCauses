export(
  "mhpc",
  "gs",
  "iamb",
  "inter.iamb",
  "fast.iamb",
  "mmpc",
  "si.hiton.pc",
  "chow.liu",
  "aracne",
  "hc",
  "tabu",
  #"rsmax2",
  "mmhc",
  "learn.mb",
  "learn.nbr",
  "naive.bayes",
  #"tree.bayes",
  ##"compare",
  ##"hamming",
  ##"shd",
  #"mb",
  #"nbr",
  #"arcs",
  #"arcs<-",
  ##"directed.arcs",
  ##"undirected.arcs",
  ##"incoming.arcs",
  ##"outgoing.arcs",
  ##"incident.arcs",
  ##"compelled.arcs",
  ##"reversible.arcs",
  #"narcs",
  #"parents",
  #"parents<-",
  #"children",
  #"children<-",
  ##"root.nodes",
  ##"leaf.nodes",
  #"nnodes",
  #"in.degree",
  #"out.degree",
  #"amat",
  #"amat<-",
  #"nparams",
  #"ntests",
  #"whitelist",
  #"blacklist",
  ##"modelstring",
  ##"modelstring<-",
  ##"model2network",
  #"set.arc",
  #"drop.arc",
  #"reverse.arc",
  #"set.edge",
  #"drop.edge",
  ##"choose.direction",
  ##"arc.strength",
  ##"boot.strength",
  ##"custom.strength",
  ##"averaged.network",
  ##"rbn",
  #"score",
  #"ci.test",
  ##"as.bn",
  ##"as.bn.fit",
  ##"as.grain",
  ##"as.graphNEL",
  ##"as.graphAM",
  #"acyclic",
  #"directed",
  #"path",
  ##"node.ordering",
  ##"subgraph",
  ##"skeleton",
  ##"pdag2dag",
  ##"ordering2blacklist",
  ##"tiers2blacklist",
  #"empty.graph",
  ##"random.graph",
  ##"bn.boot",
  ##"bn.cv",
  ##"graphviz.plot",
  ##"strength.plot",
  #"bn.fit",
  ##"custom.fit",
  ##"bn.fit.qqplot",
  ##"bn.fit.histogram",
  ##"bn.fit.xyplot",
  ##"bn.fit.barchart",
  ##"bn.fit.dotplot",
  ##"bn.net",
  ##"cpquery",
  ##"cpdist",
  #"cpdag",
  ##"cextend",
  ##"vstructs",
  #"moral",
  #"mutilated",
  #"dsep",
  ##"discretize",
  #"relevant",
  ##"bn.var",
  ##"bn.moments",
  ##"read.bif",
  ##"write.bif",
  ##"read.dsc",
  ##"write.dsc",
  ##"read.net",
  ##"write.net",
  "test.counter",
  "increment.test.counter",
  "reset.test.counter"
)

useDynLib(mhpc)

importFrom(methods, setClass, setGeneric, setMethod)
importFrom(stats, logLik, AIC, BIC)


exportClasses("bn", "bn.fit")
exportMethods("nodes", "nodes<-", "degree")
